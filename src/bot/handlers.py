"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Telegram –±–æ—Ç–∞
"""
import logging
from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


class BotHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""

    def __init__(self, chat_manager):
        self.chat_manager = chat_manager

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = str(update.effective_user.id)
        username = update.effective_user.first_name or "–ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç"

        welcome_message = f"""–ü—Ä–∏–≤–µ—Ç, {username}!

–Ø —á–∞—Ç-–±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –ò–¢–ú–û –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:
‚Ä¢ –í—ã–±–æ—Ä–æ–º –º–µ–∂–¥—É –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç" –∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò-–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∏ –æ–±—É—á–µ–Ω–∏–∏
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –≤—ã–±–æ—Ä–Ω—ã–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º

–ö–æ–º–∞–Ω–¥—ã:
/programs - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö
/background - —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –±—ç–∫–≥—Ä–∞—É–Ω–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π  
/help - —Å–ø—Ä–∞–≤–∫–∞
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é

–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –º–∞–≥–∏—Å—Ç–µ—Ä—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –ò–¢–ú–û!"""

        await update.message.reply_text(welcome_message, parse_mode='Markdown')

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """**–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

**–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º—ã?"
‚Ä¢ "–ö–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è?"
‚Ä¢ "–ü–æ—Å–æ–≤–µ—Ç—É–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –¥–ª—è ML-–∏–Ω–∂–µ–Ω–µ—Ä–∞"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –æ–±—É—á–µ–Ω–∏–µ?"
‚Ä¢ "–ö–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–µ–ª–∞—é—Ç —Å—Ç—É–¥–µ–Ω—Ç—ã?"

**–ö–æ–º–∞–Ω–¥—ã:**
/programs - –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö
/background - —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –±—ç–∫–≥—Ä–∞—É–Ω–¥
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞

**–î–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:**
–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏, –æ–ø—ã—Ç–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /background –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.

–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–µ –ò–¢–ú–û?"""

        await update.message.reply_text(help_text, parse_mode='Markdown')

    async def programs_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /programs"""
        programs_info = """**–ú–∞–≥–∏—Å—Ç–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ò–¢–ú–û –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò:**

**1. "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"**
‚Ä¢ –§–æ–∫—É—Å: ML Engineering, Data Science, AI Research
‚Ä¢ –ö–∞—Ä—å–µ—Ä–∞: ML Engineer, Data Scientist, AI Researcher
‚Ä¢ –ú–µ—Å—Ç–∞: 51 –±—é–¥–∂–µ—Ç + 55 –∫–æ–Ω—Ç—Ä–∞–∫—Ç
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: 599,000 ‚ÇΩ/–≥–æ–¥

**2. "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò-–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"**  
‚Ä¢ –§–æ–∫—É—Å: Product Management, AI Product Development
‚Ä¢ –ö–∞—Ä—å–µ—Ä–∞: AI Product Manager, AI Analyst
‚Ä¢ –ú–µ—Å—Ç–∞: 14 –±—é–¥–∂–µ—Ç + 50 –∫–æ–Ω—Ç—Ä–∞–∫—Ç
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: 599,000 ‚ÇΩ/–≥–æ–¥

**–û–±—â–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü—Ä–æ–µ–∫—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏
‚Ä¢ –î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –≤ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–º–µ—â–∞—Ç—å —Å —Ä–∞–±–æ—Ç–æ–π
‚Ä¢ –î–∏–ø–ª–æ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞

–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!"""

        await update.message.reply_text(programs_info, parse_mode='Markdown')

    async def background_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /background"""
        background_prompt = """**–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:**

**–ß—Ç–æ –≤–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:**
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–∫–∞–∫–æ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å)
‚Ä¢ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (—Å—Ñ–µ—Ä–∞, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Å—Ç–∞–∂)
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ (—è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã)
‚Ä¢ –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ò–ò/ML (–∫—É—Ä—Å—ã, –ø—Ä–æ–µ–∫—Ç—ã, –æ–ø—ã—Ç)
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ü–µ–ª–∏

**–ü—Ä–∏–º–µ—Ä:**
"–û–∫–æ–Ω—á–∏–ª –í–¢–£ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞. –†–∞–±–æ—Ç–∞—é backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –Ω–∞ Python 2 –≥–æ–¥–∞. –ò–∑—É—á–∞–ª –∫—É—Ä—Å—ã –ø–æ ML –Ω–∞ Coursera, –¥–µ–ª–∞–ª pet-–ø—Ä–æ–µ–∫—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö. –•–æ—á—É —Å—Ç–∞—Ç—å ML-–∏–Ω–∂–µ–Ω–µ—Ä–æ–º –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ–ª—å—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏."

–ü–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–∏—è –±—ç–∫–≥—Ä–∞—É–Ω–¥–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º!"""

        await update.message.reply_text(background_prompt, parse_mode='Markdown')

    async def clear_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear"""
        user_id = str(update.effective_user.id)

        self.chat_manager.context_manager.clear_user_history(user_id)

        await update.message.reply_text(
            "üßπ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞!\n\n"
            "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥. "
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, "
            "–Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –±—ç–∫–≥—Ä–∞—É–Ω–¥ –∫–æ–º–∞–Ω–¥–æ–π /background"
        )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            user_id = str(update.effective_user.id)
            message = update.message.text

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
            await context.bot.send_chat_action(
                chat_id=update.effective_chat.id,
                action='typing'
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≤–æ–π –±—ç–∫–≥—Ä–∞—É–Ω–¥
            if self._is_background_message(message):
                interests = self._extract_interests(message)
                response = self.chat_manager.set_user_background(user_id, message, interests)
            else:
                # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                response = self.chat_manager.handle_message(user_id, message)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await update.message.reply_text(response, parse_mode='Markdown')

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await update.message.reply_text(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É."
            )

    def _is_background_message(self, message: str) -> bool:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–µ–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–∞"""
        background_indicators = [
            "—è —Ä–∞–±–æ—Ç–∞—é", "—É –º–µ–Ω—è –æ–ø—ã—Ç", "—è –∏–∑—É—á–∞–ª", "–º–æ—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
            "—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–æ–∫–æ–Ω—á–∏–ª", "—É—á–∏–ª—Å—è",
            "–º–æ–π –±—ç–∫–≥—Ä–∞—É–Ω–¥", "–º–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–ø–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é"
        ]

        message_lower = message.lower()
        return any(indicator in message_lower for indicator in background_indicators)

    def _extract_interests(self, message: str) -> list:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        interests = []
        interest_keywords = {
            "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ": ["–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "ml", "machine learning"],
            "–≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ": ["–≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "deep learning", "–Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏"],
            "–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö": ["–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "data science", "–¥–∞–Ω–Ω—ã–µ"],
            "–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ": ["–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ", "computer vision", "cv"],
            "nlp": ["nlp", "–æ–±—Ä–∞–±–æ—Ç–∫–∞ —è–∑—ã–∫–∞", "natural language"],
            "–ø—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": ["–ø—Ä–æ–¥—É–∫—Ç", "product", "–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"]
        }

        message_lower = message.lower()
        for interest, keywords in interest_keywords.items():
            if any(keyword in message_lower for keyword in keywords):
                interests.append(interest)

        return interests

    async def error_handler(self, update: object, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"Exception while handling an update: {context.error}")

        # –ï—Å–ª–∏ —ç—Ç–æ Update, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if isinstance(update, Update) and update.message:
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É."
            )
